name: Build and Deploy to GKE

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cover-letter-cluster
  GKE_ZONE: us-central1-a
  DEPLOYMENT_NAME: cover-letter-generator
  IMAGE: cover-letter-api
  REGISTRY: gcr.io
  REGION: us-central1

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'
        
    - id: 'get-credentials'
      name: 'Get GKE credentials'
      uses: 'google-github-actions/get-gke-credentials@v2'
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: Configure Docker
      run: |-
        gcloud --quiet auth configure-docker ${{ env.REGISTRY }}
    
    - name: Build Docker image
      run: |-
        docker build \
          --tag "${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ github.sha }}" \
          --build-arg GITHUB_SHA="${{ github.sha }}" \
          --build-arg GITHUB_REF="${{ github.ref }}" \
          .

    - name: Push Docker image
      run: |-
        docker push "${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ github.sha }}"

    - name: Create k8s manifests
      run: |-
        # Create k8s directory
        mkdir -p k8s
        
        # Create deployment.yaml
        cat <<EOF > k8s/deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: cover-letter-generator
        spec:
          selector:
            matchLabels:
              app: cover-letter-generator
          template:
            metadata:
              labels:
                app: cover-letter-generator
            spec:
              containers:
              - name: cover-letter-api
                image: gcr.io/PROJECT_ID/IMAGE:TAG
                ports:
                - containerPort: 8000
                env:
                - name: OPENAI_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: openai-secret
                      key: OPENAI_API_KEY
                resources:
                  requests:
                    cpu: 200m
                    memory: 512Mi
                  limits:
                    cpu: 500m
                    memory: 1Gi
                readinessProbe:
                  httpGet:
                    path: /
                    port: 8000
                  initialDelaySeconds: 5
                  periodSeconds: 10
                livenessProbe:
                  httpGet:
                    path: /
                    port: 8000
                  initialDelaySeconds: 15
                  periodSeconds: 20
        EOF
        
        # Create service.yaml
        cat <<EOF > k8s/service.yaml
        apiVersion: v1
        kind: Service
        metadata:
          name: cover-letter-generator
          labels:
            app: cover-letter-generator
        spec:
          type: LoadBalancer
          ports:
          - port: 80
            targetPort: 8000
            protocol: TCP
            name: http
          selector:
            app: cover-letter-generator
        EOF
        
        # Create kustomization.yaml with label configuration
        cat <<EOF > kustomization.yaml
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization

        resources:
          - k8s/deployment.yaml
          - k8s/service.yaml

        namespace: default

        images:
          - name: gcr.io/PROJECT_ID/IMAGE:TAG
            newName: gcr.io/${PROJECT_ID}/${IMAGE}
            newTag: ${GITHUB_SHA}

        labels:
          - pairs:
              environment: production
            includeSelectors: false

        replicas:
          - name: cover-letter-generator
            count: 2
        EOF

    - name: Create Kubernetes secrets
      run: |-
        kubectl create secret generic openai-secret \
          --from-literal=OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    - name: Deploy to GKE
      run: |-
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ github.sha }}
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}
        kubectl get services -o wide

    - name: Verify deployment
      run: |-
        kubectl get deployment ${{ env.DEPLOYMENT_NAME }}
        kubectl get pods -l app=${{ env.DEPLOYMENT_NAME }}
        kubectl get service ${{ env.DEPLOYMENT_NAME }}